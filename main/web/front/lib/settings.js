var A=Object.defineProperty,H=Object.defineProperties;var V=Object.getOwnPropertyDescriptors;var O=Object.getOwnPropertySymbols;var _=Object.prototype.hasOwnProperty,G=Object.prototype.propertyIsEnumerable;var W=(o,n,c)=>n in o?A(o,n,{enumerable:!0,configurable:!0,writable:!0,value:c}):o[n]=c,p=(o,n)=>{for(var c in n||(n={}))_.call(n,c)&&W(o,c,n[c]);if(O)for(var c of O(n))G.call(n,c)&&W(o,c,n[c]);return o},b=(o,n)=>H(o,V(n));const App=()=>{var I,E;const[o,n]=React.useState(!1),[c,v]=React.useState(!0),[S,N]=React.useState(null),[y,k]=React.useState(0),[R,x]=React.useState({freeHeap:0,socTemp:0}),[a,T]=React.useState({deviceInfo:{name:"TBD",firmwareVersion:"TBD",hardwareVersion:"TBD",macAddress:"00:00:00:00:00:00"},power:{sleepTimeout:30,lowPowerMode:!1,enableSleep:!0,deepSleep:!1},led:{brightness:80},connectivity:{bleTxPower:"low",bleReconnectDelay:3}}),[D,C]=React.useState(null),[M,F]=React.useState("info"),[B,P]=React.useState(0),[m,f]=React.useState(!1),r=React.useRef(null),w=React.useRef(null),h=React.useRef(null),u=React.useRef(null);React.useEffect(()=>(g(),w.current=setInterval(L,1e3),()=>{r.current&&r.current.close(),w.current&&clearInterval(w.current)}),[]);const L=()=>{const e=Date.now();if(y>0&&e-y>1500){if(n(!1),v(!0),r.current&&r.current.readyState!==WebSocket.CLOSED)try{r.current.close()}catch(t){console.error("Error closing socket:",t)}setTimeout(g,1e3)}},g=()=>{v(!0),N(null);const t=`${window.location.protocol==="https:"?"wss:":"ws:"}//${window.location.host}/ws`,s=new WebSocket(t);r.current=s,s.onopen=()=>{console.log("WebSocket connected"),n(!0),v(!1),k(Date.now()),J()},s.onclose=()=>{console.log("WebSocket disconnected"),n(!1),v(!0),setTimeout(g,1e3)},s.onerror=i=>{console.error("WebSocket error:",i),N("Failed to connect to the device. Please try again later."),v(!1)},s.onmessage=i=>{U(i.data)}},U=e=>{k(Date.now());try{const t=JSON.parse(e);switch(t.type){case"ota_progress":if(t.content&&t.content.progress!==void 0){const s=typeof t.content=="string"?JSON.parse(t.content).progress:t.content.progress;P(s),s===100&&(l("OTA update completed successfully! Device will reboot.","success"),setTimeout(()=>{f(!1)},2e3))}break;case"settings":if(t.content){const s=p(p({},a),t.content);T(s),u.current||(u.current=JSON.stringify(s))}break;case"settings_update_status":t.content.success?l("Settings updated successfully. The device is restarting.","success"):l(`Failed to update settings: ${t.content.error}`,"error");break;case"log":console.log("Server log:",t.content);break;case"ping":if(t.content)try{const s=typeof t.content=="string"?JSON.parse(t.content):t.content;x({freeHeap:s.freeHeap||0,socTemp:s.socTemp||0})}catch(s){console.error("Error parsing ping data:",s)}break;default:console.log("Unknown message type:",t.type)}}catch(t){console.error("Error parsing WebSocket message:",t)}},J=()=>{if(!r.current||r.current.readyState!==WebSocket.OPEN){l("WebSocket not connected","error");return}r.current.send(JSON.stringify({type:"command",command:"get_settings"}))},$=()=>{if(!r.current||r.current.readyState!==WebSocket.OPEN){l("WebSocket not connected","error");return}r.current.send(JSON.stringify({type:"command",command:"update_settings",content:a})),l("Saving settings...","info")},d=(e,t,s)=>{T(i=>b(p({},i),{[e]:b(p({},i[e]),{[t]:s})}))},l=(e,t)=>{C(e),F(t),setTimeout(()=>{C(null)},5e3)};return c||!o?React.createElement("div",{id:"loadingContainer"},React.createElement("div",{className:"spinner"}),React.createElement("p",null,o?"Loading settings":"Waiting for connection...")):S?React.createElement("div",{className:"container"},React.createElement("div",{className:"status error"},S),React.createElement("button",{onClick:g},"Retry Connection")):React.createElement("div",null,React.createElement("h1",null,"Device Settings"),React.createElement("div",{className:"container"},D&&React.createElement("div",{className:`status ${M}`},D),React.createElement("button",{onClick:$,disabled:!o||m||u.current&&JSON.stringify(a)===u.current},"Save & Reboot"),React.createElement("button",{onClick:()=>window.location.href="/",style:{marginLeft:"10px",backgroundColor:"#6c757d"},disabled:m},"Return"),React.createElement("div",{className:"setting-group"},React.createElement("h2",null,"Device Information"),React.createElement("div",{className:"setting-item"},React.createElement("div",{className:"setting-title"},"Firmware version"),React.createElement("div",null,a.deviceInfo.firmwareVersion)),React.createElement("div",{className:"setting-item"},React.createElement("div",{className:"setting-title"},"Hardware revision"),React.createElement("div",null,a.deviceInfo.hardwareVersion)),React.createElement("div",{className:"setting-item"},React.createElement("div",{className:"setting-title"},"MAC address"),React.createElement("div",null,a.deviceInfo.macAddress)),React.createElement("div",{className:"setting-item"},React.createElement("div",{className:"setting-title"},"Free heap"),React.createElement("div",null,(R.freeHeap/1e3).toFixed(0)," kb")),React.createElement("div",{className:"setting-item"},React.createElement("div",{className:"setting-title"},"SoC temperature"),React.createElement("div",null,R.socTemp.toFixed(0),"\xB0C"))),React.createElement("div",{className:"setting-group"},React.createElement("h2",null,"Power Management"),React.createElement("div",{className:"setting-item"},React.createElement("div",{className:"setting-title"},"Low power mode"),React.createElement("div",{className:"setting-description"},"Sacrifice performance to improve battery life. Makes BLE interval to be ~12-15ms instead of 7.5ms. Makes RGB LEDs to update with 60FPS instead of 120FPS."),React.createElement("label",{className:"toggle-switch"},React.createElement("input",{type:"checkbox",checked:a.power.lowPowerMode,onChange:e=>d("power","lowPowerMode",e.target.checked)}),React.createElement("span",{className:"slider"}))),React.createElement("div",{className:"setting-item"},React.createElement("div",{className:"setting-title"},"Enable sleep"),React.createElement("div",{className:"setting-description"},"Enable device to enter sleep mode and disable Bluetooth when no events received in the time window."),React.createElement("label",{className:"toggle-switch"},React.createElement("input",{type:"checkbox",checked:a.power.enableSleep,onChange:e=>d("power","enableSleep",e.target.checked)}),React.createElement("span",{className:"slider"}))),React.createElement("div",{className:"setting-item"},React.createElement("div",{className:"setting-title"},"Deep sleep"),React.createElement("div",{className:"setting-description"},"When enabled, USB device will not be able to wake up the device. You will have to press any button on the device itself."),React.createElement("label",{className:"toggle-switch"},React.createElement("input",{type:"checkbox",checked:a.power.deepSleep,onChange:e=>d("power","deepSleep",e.target.checked)}),React.createElement("span",{className:"slider"}))),React.createElement("div",{className:"setting-item"},React.createElement("div",{className:"setting-title"},"Sleep timeout"),React.createElement("div",{className:"setting-description"},"Time without USB events in seconds before device enters sleep mode."),React.createElement("input",{type:"number",min:"0",max:"3600",value:a.power.sleepTimeout,onChange:e=>d("power","sleepTimeout",parseInt(e.target.value))}))),React.createElement("div",{className:"setting-group"},React.createElement("h2",null,"Visuals"),React.createElement("div",{className:"setting-item"},React.createElement("div",{className:"setting-title"},"Brightness"),React.createElement("div",{className:"setting-description"},"Global LED brightness percentage."),React.createElement("input",{type:"range",min:"0",max:"100",value:a.led.brightness,onChange:e=>d("led","brightness",parseInt(e.target.value))}))),React.createElement("div",{className:"setting-group"},React.createElement("h2",null,"Connectivity"),React.createElement("div",{className:"setting-item"},React.createElement("div",{className:"setting-title"},"BLE TX power"),React.createElement("div",{className:"setting-description"},"Bluetooth transmission power level."),React.createElement("select",{value:a.connectivity.bleTxPower,onChange:e=>d("connectivity","bleTxPower",e.target.value)},React.createElement("option",{value:"n6"},"-6 dB"),React.createElement("option",{value:"n3"},"-3 dB"),React.createElement("option",{value:"n0"},"0 dB"),React.createElement("option",{value:"p3"},"+3 dB"),React.createElement("option",{value:"p6"},"+6 dB"),React.createElement("option",{value:"p9"},"+9 dB"))),React.createElement("div",{className:"setting-item"},React.createElement("div",{className:"setting-title"},"Reconnect delay"),React.createElement("div",{className:"setting-description"},"Delay in seconds before attempting to reconnect after Bluetooth disconnect. Doesn't affect waking up from sleep."),React.createElement("input",{type:"number",min:"1",max:"60",value:a.connectivity.bleReconnectDelay,onChange:e=>d("connectivity","bleReconnectDelay",parseInt(e.target.value))}))),React.createElement("div",{className:"setting-group"},React.createElement("h2",null,"Firmware Update"),React.createElement("div",{className:"setting-item"},React.createElement("div",{className:"setting-description"},"Upload a new firmware file to update the device. The device will reboot after a successful update."),m?React.createElement("div",null,React.createElement("div",{className:"progress-container"},React.createElement("div",{className:"progress-bar",style:{width:`${B}%`}},B,"%")),React.createElement("p",null,"Uploading firmware...")):React.createElement("div",null,React.createElement("div",{className:"file-input-container"},React.createElement("input",{type:"file",ref:h,accept:".bin"})),React.createElement("button",{onClick:()=>{const e=h.current;if(!e||!e.files||e.files.length===0){l("Please select a firmware file","error");return}const t=e.files[0],s=new FormData;s.append("firmware",t),f(!0),P(0),l("Starting firmware upload...","info"),window.scrollTo(0,0),fetch("/upload",{method:"POST",body:s}).then(i=>{if(!i.ok)throw new Error(`HTTP error ${i.status}`);return i.text()}).then(i=>{console.log("Upload successful:",i)}).catch(i=>{console.error("Upload failed:",i),f(!1),l(`Upload failed: ${i.message}`,"error")})},disabled:!o||!((E=(I=h.current)==null?void 0:I.files)!=null&&E.length)},"Flash"))))))};ReactDOM.render(React.createElement(App,null),document.getElementById("root"));
